meta {
  name: Get User Data
  type: http
  seq: 1
}

get {
  url: {{baseUrl}}/api/users/{{userId}}
  body: none
  auth: bearer
}

auth:bearer {
  token: {{authToken}}
}

assert {
  res.status: eq 200
  res.body.id: eq {{userId}}
  res.body.email: isDefined
}

tests {
  test("User data is returned correctly", function() {
    expect(res.getBody().id).to.be.a('string');
    expect(res.getBody().email).to.be.a('string');
    expect(res.getBody().email).to.match(/^[^\s@]+@[^\s@]+\.[^\s@]+$/);
  });
  
  test("Sensitive data is not exposed", function() {
    expect(res.getBody().password).to.be.undefined;
    expect(res.getBody().passwordHash).to.be.undefined;
  });
}