rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Users can only read/write their own user document
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
      allow read: if request.auth != null && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['admin', 'officer'];
    }
    
    // Public read access to departments and services
    match /departments/{departmentId} {
      allow read: if true;
      allow write: if request.auth != null && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['admin', 'officer'];
    }
    
    match /services/{serviceId} {
      allow read: if true;
      allow write: if request.auth != null && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['admin', 'officer'];
    }
    
    // Appointments - users can manage their own, officers/admins can manage all
    match /appointments/{appointmentId} {
      allow read, write: if request.auth != null && (
        resource.data.userId == request.auth.uid || 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['admin', 'officer']
      );
      allow create: if request.auth != null && request.auth.uid == resource.data.userId;
    }
    
    // Documents tied to appointments
    match /uploaded_documents/{documentId} {
      allow read, write: if request.auth != null && (
        resource.data.userId == request.auth.uid ||
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['admin', 'officer']
      );
    }
    
    // Notifications for specific users
    match /notifications/{notificationId} {
      allow read, write: if request.auth != null && resource.data.userId == request.auth.uid;
      allow create: if request.auth != null && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['admin', 'officer'];
    }
    
    // Feedback - users can create, officers/admins can read
    match /feedback/{feedbackId} {
      allow read: if request.auth != null && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['admin', 'officer'];
      allow create: if request.auth != null && request.auth.uid == resource.data.userId;
    }
    
    // Analytics - read only for officers and admins
    match /analytics/{analyticsId} {
      allow read: if request.auth != null && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['admin', 'officer'];
    }
  }
}